//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ACHR.MagiConnect_Stock {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="stockSoap", Namespace="http://www.magishop.com/")]
    public partial class stock : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateStockActualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStockWithAdjustmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStockActualsForOutletOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStockWithAdjustmentsForOutletOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public stock() {
            this.Url = global::ACHR.Properties.Settings.Default.ViaTech_MagiConnect_Stock_stock;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateStockActualsCompletedEventHandler UpdateStockActualsCompleted;
        
        /// <remarks/>
        public event UpdateStockWithAdjustmentsCompletedEventHandler UpdateStockWithAdjustmentsCompleted;
        
        /// <remarks/>
        public event UpdateStockActualsForOutletCompletedEventHandler UpdateStockActualsForOutletCompleted;
        
        /// <remarks/>
        public event UpdateStockWithAdjustmentsForOutletCompletedEventHandler UpdateStockWithAdjustmentsForOutletCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.magishop.com/UpdateStockActuals", RequestNamespace="http://www.magishop.com/", ResponseNamespace="http://www.magishop.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateStockActuals(string Login, string Password, string[] ProductCodes, decimal[] QuantitiesAvailable) {
            object[] results = this.Invoke("UpdateStockActuals", new object[] {
                        Login,
                        Password,
                        ProductCodes,
                        QuantitiesAvailable});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStockActualsAsync(string Login, string Password, string[] ProductCodes, decimal[] QuantitiesAvailable) {
            this.UpdateStockActualsAsync(Login, Password, ProductCodes, QuantitiesAvailable, null);
        }
        
        /// <remarks/>
        public void UpdateStockActualsAsync(string Login, string Password, string[] ProductCodes, decimal[] QuantitiesAvailable, object userState) {
            if ((this.UpdateStockActualsOperationCompleted == null)) {
                this.UpdateStockActualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStockActualsOperationCompleted);
            }
            this.InvokeAsync("UpdateStockActuals", new object[] {
                        Login,
                        Password,
                        ProductCodes,
                        QuantitiesAvailable}, this.UpdateStockActualsOperationCompleted, userState);
        }
        
        private void OnUpdateStockActualsOperationCompleted(object arg) {
            if ((this.UpdateStockActualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStockActualsCompleted(this, new UpdateStockActualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.magishop.com/UpdateStockWithAdjustments", RequestNamespace="http://www.magishop.com/", ResponseNamespace="http://www.magishop.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateStockWithAdjustments(string Login, string Password, string[] ProductCodes, decimal[] AdjustmentQuantities) {
            object[] results = this.Invoke("UpdateStockWithAdjustments", new object[] {
                        Login,
                        Password,
                        ProductCodes,
                        AdjustmentQuantities});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStockWithAdjustmentsAsync(string Login, string Password, string[] ProductCodes, decimal[] AdjustmentQuantities) {
            this.UpdateStockWithAdjustmentsAsync(Login, Password, ProductCodes, AdjustmentQuantities, null);
        }
        
        /// <remarks/>
        public void UpdateStockWithAdjustmentsAsync(string Login, string Password, string[] ProductCodes, decimal[] AdjustmentQuantities, object userState) {
            if ((this.UpdateStockWithAdjustmentsOperationCompleted == null)) {
                this.UpdateStockWithAdjustmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStockWithAdjustmentsOperationCompleted);
            }
            this.InvokeAsync("UpdateStockWithAdjustments", new object[] {
                        Login,
                        Password,
                        ProductCodes,
                        AdjustmentQuantities}, this.UpdateStockWithAdjustmentsOperationCompleted, userState);
        }
        
        private void OnUpdateStockWithAdjustmentsOperationCompleted(object arg) {
            if ((this.UpdateStockWithAdjustmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStockWithAdjustmentsCompleted(this, new UpdateStockWithAdjustmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.magishop.com/UpdateStockActualsForOutlet", RequestNamespace="http://www.magishop.com/", ResponseNamespace="http://www.magishop.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateStockActualsForOutlet(string Login, string Password, string OutletCode, string[] ProductCodes, decimal[] QuantitiesAvailable) {
            object[] results = this.Invoke("UpdateStockActualsForOutlet", new object[] {
                        Login,
                        Password,
                        OutletCode,
                        ProductCodes,
                        QuantitiesAvailable});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStockActualsForOutletAsync(string Login, string Password, string OutletCode, string[] ProductCodes, decimal[] QuantitiesAvailable) {
            this.UpdateStockActualsForOutletAsync(Login, Password, OutletCode, ProductCodes, QuantitiesAvailable, null);
        }
        
        /// <remarks/>
        public void UpdateStockActualsForOutletAsync(string Login, string Password, string OutletCode, string[] ProductCodes, decimal[] QuantitiesAvailable, object userState) {
            if ((this.UpdateStockActualsForOutletOperationCompleted == null)) {
                this.UpdateStockActualsForOutletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStockActualsForOutletOperationCompleted);
            }
            this.InvokeAsync("UpdateStockActualsForOutlet", new object[] {
                        Login,
                        Password,
                        OutletCode,
                        ProductCodes,
                        QuantitiesAvailable}, this.UpdateStockActualsForOutletOperationCompleted, userState);
        }
        
        private void OnUpdateStockActualsForOutletOperationCompleted(object arg) {
            if ((this.UpdateStockActualsForOutletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStockActualsForOutletCompleted(this, new UpdateStockActualsForOutletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.magishop.com/UpdateStockWithAdjustmentsForOutlet", RequestNamespace="http://www.magishop.com/", ResponseNamespace="http://www.magishop.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateStockWithAdjustmentsForOutlet(string Login, string Password, string OutletCode, string[] ProductCodes, decimal[] AdjustmentQuantities) {
            object[] results = this.Invoke("UpdateStockWithAdjustmentsForOutlet", new object[] {
                        Login,
                        Password,
                        OutletCode,
                        ProductCodes,
                        AdjustmentQuantities});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStockWithAdjustmentsForOutletAsync(string Login, string Password, string OutletCode, string[] ProductCodes, decimal[] AdjustmentQuantities) {
            this.UpdateStockWithAdjustmentsForOutletAsync(Login, Password, OutletCode, ProductCodes, AdjustmentQuantities, null);
        }
        
        /// <remarks/>
        public void UpdateStockWithAdjustmentsForOutletAsync(string Login, string Password, string OutletCode, string[] ProductCodes, decimal[] AdjustmentQuantities, object userState) {
            if ((this.UpdateStockWithAdjustmentsForOutletOperationCompleted == null)) {
                this.UpdateStockWithAdjustmentsForOutletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStockWithAdjustmentsForOutletOperationCompleted);
            }
            this.InvokeAsync("UpdateStockWithAdjustmentsForOutlet", new object[] {
                        Login,
                        Password,
                        OutletCode,
                        ProductCodes,
                        AdjustmentQuantities}, this.UpdateStockWithAdjustmentsForOutletOperationCompleted, userState);
        }
        
        private void OnUpdateStockWithAdjustmentsForOutletOperationCompleted(object arg) {
            if ((this.UpdateStockWithAdjustmentsForOutletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStockWithAdjustmentsForOutletCompleted(this, new UpdateStockWithAdjustmentsForOutletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStockActualsCompletedEventHandler(object sender, UpdateStockActualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStockActualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStockActualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStockWithAdjustmentsCompletedEventHandler(object sender, UpdateStockWithAdjustmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStockWithAdjustmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStockWithAdjustmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStockActualsForOutletCompletedEventHandler(object sender, UpdateStockActualsForOutletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStockActualsForOutletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStockActualsForOutletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStockWithAdjustmentsForOutletCompletedEventHandler(object sender, UpdateStockWithAdjustmentsForOutletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStockWithAdjustmentsForOutletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStockWithAdjustmentsForOutletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591